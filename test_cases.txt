eval. sheet:
./philo 1 800 200 200 a philo should die
./philo 5 800 200 200 no one should die
./philo 5 800 200 200 7
./philo 4 410 200 200 no one should die
./philo 4 310 200 100 a philo should die

test with 2 philos

./philo 4 200 205 200
a philo should die
./philo 4 410 200 200
no one should die
no one should die, simulation should stop after 7 eats
./philo 4 410 200 200 10
no one should die, simulation should stop after 10 eats
./philo -5 600 200 200
should error and not run (no crashing)
./philo 4 -5 200 200
should error and not run (no crashing)
./philo 4 600 -5 200
should error and not run (no crashing)
./philo 4 600 200 -5
should error and not run (no crashing)
./philo 4 600 200 200 -5
should error and not run (no crashing)

./philo 5 800 200 200
no one should die
./philo 5 600 150 150
no one should die
./philo 4 410 200 200
no one should die
./philo 100 800 200 200
no one should die
./philo 105 800 200 200
no one should die
./philo 200 800 200 200
no one should die

if you have a large numbet of philos like 100 (even number) no one should die for such situatuon:
./philo 100 500 200 200
if you have large numver of philos but in odd numbers, like 151 philos, no one should die with this condition:
./philo 151 700 200 200
and if the sleep time is less than the eat time, if your code is good no one should die but has never happened
like: ./philo 10 400 200 100



./philo 2 310 200 100